RUN apt-get update && apt-get -y upgrade
# Add oracle java 7 repository
RUN apt-get -y install software-properties-common
RUN add-apt-repository ppa:webupd8team/java
RUN apt-get -y update
# Accept the Oracle Java license
RUN echo "oracle-java7-installer shared/accepted-oracle-license-v1-1 boolean true" | debconf-set-selections
# Install Oracle Java
RUN apt-get -y install oracle-java7-installer
# Install tomcat
RUN apt-get -y install tomcat7
RUN echo "JAVA_HOME=/usr/lib/jvm/java-7-oracle" >> /etc/default/tomcat7
EXPOSE 8080
# Download Slashdot homepage
RUN mkdir /var/lib/tomcat7/webapps/slashdot
RUN wget http://www.slashdot.org -P /var/lib/tomcat7/webapps/slashdot
# Start Tomcat, after starting Tomcat the container will stop. So use a 'trick' to keep it running.
CMD service tomcat7 start && tail -f /var/lib/tomcat7/logs/catalina.out




wget  http://mirrors.fe.up.pt/pub/apache/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.tar.gz
tar  -zxf apache-maven-3.2.5-bin.tar.gz   -C   /opt/      
 rm   -rf  apache-maven-3.2.5-bin.tar.gz
PATH=$PATH:/opt/apache-maven-3.2.5/bin





docker commit -m "added maven" -a "luigi bennardis" 5c302b8961f9 codem/micros:3.0

















Docker 

docker run –p 8080:8080 consol/tomcat-8.0 &


http://192.168.99.100:8081/
192.168.99.100


docker@default:~$ netstat -an | grep LISTEN
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN
tcp        0      0 :::2376                 :::*                    LISTEN
tcp        0      0 :::8080                 :::*                    LISTEN
tcp        0      0 :::8081                 :::*                    LISTEN
tcp        0      0 :::22                   :::*                    LISTEN
unix  2      [ ACC ]     STREAM     LISTENING      16922 /var/run/docker.sock
unix  2      [ ACC ]     STREAM     LISTENING      16704 /var/run/acpid.socket
unix  2      [ ACC ]     SEQPACKET  LISTENING      14190 /run/udev/control
docker@default:~$ ifconfig
docker0   Link encap:Ethernet  HWaddr 02:42:7B:6C:FA:8B
          inet addr:172.17.42.1  Bcast:0.0.0.0  Mask:255.255.0.0
          inet6 addr: fe80::42:7bff:fe6c:fa8b/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:26 errors:0 dropped:0 overruns:0 frame:0
          TX packets:3 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:1760 (1.7 KiB)  TX bytes:258 (258.0 B)

eth0      Link encap:Ethernet  HWaddr 08:00:27:C5:6A:9E
          inet addr:10.0.2.15  Bcast:10.0.2.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:fec5:6a9e/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:255724 errors:0 dropped:0 overruns:0 frame:0
          TX packets:107701 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:342772359 (326.8 MiB)  TX bytes:7066695 (6.7 MiB)

eth1      Link encap:Ethernet  HWaddr 08:00:27:BD:ED:C0
          inet addr:192.168.99.100  Bcast:192.168.99.255  Mask:255.255.255.0
          inet6 addr: fe80::a00:27ff:febd:edc0/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:67 errors:0 dropped:0 overruns:0 frame:0
          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:9458 (9.2 KiB)  TX bytes:3342 (3.2 KiB)

lo        Link encap:Local Loopback
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          UP LOOPBACK RUNNING  MTU:65536  Metric:1
          RX packets:16 errors:0 dropped:0 overruns:0 frame:0
          TX packets:16 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:1152 (1.1 KiB)  TX bytes:1152 (1.1 KiB)

veth46c46b1 Link encap:Ethernet  HWaddr 56:BA:88:8A:35:8E
          inet6 addr: fe80::54ba:88ff:fe8a:358e/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:648 (648.0 B)  TX bytes:648 (648.0 B)

vethe0755d7 Link encap:Ethernet  HWaddr 7E:6D:C6:E4:10:04
          inet6 addr: fe80::7c6d:c6ff:fee4:1004/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:16 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:648 (648.0 B)  TX bytes:1296 (1.2 KiB)

vethe415174 Link encap:Ethernet  HWaddr 62:95:89:7F:A9:27
          inet6 addr: fe80::6095:89ff:fe7f:a927/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:8 errors:0 dropped:0 overruns:0 frame:0
          TX packets:24 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0
          RX bytes:648 (648.0 B)  TX bytes:1944 (1.8 KiB)

docker@default:~$
docker@default:~$
docker@default:~$
docker@default:~$
docker@default:~$ ls
docker@default:~$ ls
docker@default:~$ ls -a
./            .ash_history  .docker/      .profile
../           .ashrc        .local/       .ssh/
docker@default:~$ uname -a
Linux default 4.0.9-boot2docker #1 SMP Thu Sep 10 20:39:20 UTC 2015 x86_64 GNU/Linux
docker@default:~$ cd .local
docker@default:~/.local$ ls
bin/
docker@default:~/.local$ cd bin
docker@default:~/.local/bin$ ls
docker@default:~/.local/bin$ cd /
docker@default:/$ ls
bin/     etc/     lib/     mnt/     root/    sys/     var/
c/       home/    lib64    opt/     run/     tmp
dev/     init     linuxrc  proc/    sbin/    usr/
docker@default:/$


sudo power off
ping docker.io
1-> macchina locale
100-> macchina remota

Whoiam

./monta (monta la share) 
docker tcuser

dir di mount
/mnt/win/3volv-04








1.	1Choose a type of application
2.	2Configure the application
3.	3Next steps
Jenkins created successfully.  Please make note of these credentials:

   User: admin
   Password: s-Y6dlMRj2Zm

Note:  You can change your password at: https://jenkins-cienv.rhcloud.com/me/configure

Your application has been created. Continue to the application overview page.
Making code changes
Install the Git client for your operating system, and from your command line run
git clone ssh://566ae57d0c1e6629760000cd@jenkins-cienv.rhcloud.com/~/git/jenkins.git/
cd jenkins/
This will create a folder with the source code of your application. After making a change, add,commit, and push your changes.
git add .
git commit -m 'My changes'
git push
When you push changes the OpenShift server will report back its status on deploying your code. The server will run any of your configured deploy hooks and then restart the application.
Manage your app
The console is convenient, but if you need deeper control try our other client tools
Command-Line
All of the capabilities of OpenShift are exposed through our command line tool, rhc. Follow these steps to install the client on Linux, Mac OS X, or Windows.
After installing the RHC read more on how to manage your application from the command line in our User Guide.
JBoss Developer Studio
The JBoss Developer Studio is a full featured IDE with OpenShift integration built in. It gives you the ability to create, edit and deploy applications without having to leave the IDE. Links to download, install and use the JBoss Developer Studio for Linux, Mac OS X, or Windows can be found on the JBoss Developer Studio tools page.

Stop dei container
docker stop $(docker ps -a -q)
revove dei container 
docker rm $(docker ps -a -q)


CREAZIONE MACCHINA JAVA BASATA SU UBUNTU (immagine base)
docker build -t="dockerfile/ubuntu" github.com/dockerfile/Ubuntu (get Ubuntu:14.4)

docker build -t="dockerfile/java" github.com/dockerfile/java


docker run -it --rm dockerfile/java





C






share montata
/c/Users/3volv-04



Installazione di maven
wget  http://mirrors.fe.up.pt/pub/apache/maven/maven-3/3.2.5/binaries/apache-maven-3.2.5-bin.tar.gz
tar  -zxf apache-maven-3.2.5-bin.tar.gz   -C   /opt/      
 rm   -rf  apache-maven-3.2.5-bin.tar.gz
PATH=$PATH:/opt/apache-maven-3.2.5/bin


Avvio imagine con riga di commando 
docker run -t -i consol/tomcat-8.0 /bin/bash



Aperture immagine per upd
docker run -t -i dockerfile/java /bin/bash


commit dell’immagine


docker commit -m "added nano" -a "luigi bennardis" bfd328e01b4f codem/micros:5.1


esecuzione 


docker run –it –rm codem/micros java

docker run -it --rm codem/micros:5.1 mvn

docker run -it codem/micros:5.1

opt/bin
 sudo ln -s /opt/apache-maven-3.2.5/bin/mvn
 
 [ root@bfd328e01b4f:~ ]$ cd /usr/bin
[ root@bfd328e01b4f:/usr/bin ]$ mvn
bash: mvn: command not found
[ root@bfd328e01b4f:/usr/bin ]$ sudo ln -s /opt/apache-maven-3.2.5/bin/mvn

top 

ps -aux




cartella condivisaa su boot2docker  
:/c/Users/3volv-04$










build maven 

C:\development\gs-spring-boot-docker-master\complete>mvn package docker:build






C:\development\gs-spring-boot-docker-master\complete>docker images
REPOSITORY                       TAG                 IMAGE ID            CREATED
             VIRTUAL SIZE
springio/gs-spring-boot-docker   latest              4e8c85c25230        21 minu
tes ago      668.7 MB
java                             8                   e9de8c6faf15        2 weeks
 ago         642 MB






C:\development\gs-spring-boot-docker-master\complete>
docker run -p 8080:8080 -t springio/gs-spring-boot-docker


http://192.168.99.100:8080/



docker run -p 8080:8080 -it --rm lbennardis/micros:1.0


docker run -p 8081:8080 -it --rm lbennardis/micros:1.0




 


avvio dockermachine

docker-machine ls







docker-machine stop localDockerMachine
docker-machine start localDockerMachine


docker-machine ls
NAME                 ACTIVE   DRIVER       STATE     URL
 SWARM
default                       virtualbox   Stopped

localDockerMachine   *        virtualbox   Running   tcp://192.168.99.100:2376


docker run -p 8080:8080 -it --rm lbennardis/micros:1.0


docker run -p 8081:8080 -it --rm lbennardis/micros:1.0



da putty 
docker@localDockerMachine:~$ docker ps
CONTAINER ID        IMAGE                   COMMAND                  CREATED              STATUS              PORTS                    NAMES
825b119b17e0        lbennardis/micros:1.0   "java -Djava.security"   About a minute ago   Up About a minute   0.0.0.0:8082->8080/tcp   drunk_wright
39ea1b4ccdea        lbennardis/micros:1.0   "java -Djava.security"   About a minute ago   Up About a minute   0.0.0.0:8081->8080/tcp   berserk_leakey



C:\development\gs-spring-boot-docker-master\complete>docker images
REPOSITORY          TAG                 IMAGE ID            CREATED
VIRTUAL SIZE
lbennardis/micros   1.0                 4e8c85c25230        About an hour ago
668.7 MB
java                8                   e9de8c6faf15        2 weeks ago
642 MB






https://jenkins-cienv.rhcloud.com/




mysql

C:\Users\3volv-04>docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED
      STATUS              PORTS               NAMES
301f880989e2        mysql:5.6           "/entrypoint.sh mysql"   About a minute
ago   Up About a minute   3306/tcp            admiring_jones




ACCESSO SSH A OPENSHIFT 
https://developers.openshift.com/en/getting-started-windows.html#client-tools

Installing Ruby 1.9.3





C:\Users\3volv-04>rhc setup
OpenShift Client Tools (RHC) Setup Wizard

This wizard will help you upload your SSH keys, set your application namespace,
and check that other programs like Git are properly installed.

If you have your own OpenShift server, you can specify it now. Just hit enter to

use the server for OpenShift Online: openshift.redhat.com.
Enter the server hostname: |openshift.redhat.com| jenkins-cienv.rhcloud.com

You can add more servers later using 'rhc server'.
RSA 1024 bit CA certificates are loaded due to old openssl compatibility

The OpenShift server is not responding correctly.  Check that
'https://jenkins-cienv.rhcloud.com/broker/rest/api' is the correct URL for your
server. The server may be offline or misconfigured.

C:\Users\3volv-04>rhc setup
OpenShift Client Tools (RHC) Setup Wizard

This wizard will help you upload your SSH keys, set your application namespace,
and check that other programs like Git are properly installed.

If you have your own OpenShift server, you can specify it now. Just hit enter to

use the server for OpenShift Online: openshift.redhat.com.
Enter the server hostname: |openshift.redhat.com|

You can add more servers later using 'rhc server'.
RSA 1024 bit CA certificates are loaded due to old openssl compatibility

Login to openshift.redhat.com: l.bennardis@email.it
Password: *******

OpenShift can create and store a token on disk which allows to you to access the

server without using your password. The key is stored in your home directory and

should be kept secret.  You can delete the key at any time by running 'rhc
logout'.
Generate a token now? (yes|no) yes
Generating an authorization token for this client ... RSA 1024 bit CA certificat
es are loaded due to old openssl compatibility
lasts about 1 month

Saving configuration to C:\Users\3volv-04\.openshift\express.conf ... done

No SSH keys were found. We will generate a pair of keys for you.

    Created: C:/Users/3volv-04/.ssh/id_rsa.pub

Your public SSH key must be uploaded to the OpenShift server to access code.
Upload now? (yes|no)
yes

  rsakey (type: ssh-rsa)
  ----------------------
    Fingerprint: 0e:e1:ee:f6:f6:cb:00:d6:1c:a5:29:21:ba:6c:b9:3f

You can enter a name for your key, or leave it blank to use the default name.
Using the same name as an existing key will overwrite the old key.

Provide a name for this key: |lbennardistrevol| lbennardiskey

Uploading key 'lbennardiskey' ... done

Checking common problems

Your private SSH key file should be set as readable only to yourself.  Please
run 'chmod 600 C:\Users\3volv-04\.ssh\id_rsa'

Checking for a domain ... cienv

Checking for applications ... found 1

  jenkins http://jenkins-cienv.rhcloud.com/

  You are using 1 of 3 total gears
  The following gear sizes are available to you: small

Your client tools are now configured.

C:\Users\3volv-04>


https://developers.openshift.com/en/managing-remote-connection.html

putty private key 
   C:\Users\3volv-04\.ssh\puttyprivatekeyNopassprase
   
   
    https://developers.openshift.com/en/managing-remote-connection.html
   


   
   
   
   
docker tag lbennardis/micros:1.0 micros:1.0

docker tag micros:1.0 luigibennardis/micros:1.0




docker-machine restart localDockerMachine


docker login --username=luigibennardis --password=musical --email=l.bennardis@email.it

docker push luigibennardis/micros:1.0



http://blog.philipphauer.de/building-dropwizard-microservice-docker-maven/#Step_5_Pushingthe_Image_to_aRegistry
http://www.slideshare.net/Docker/build-publish-deploy-and-test-docker-images-and-containers-with-jenkins-workflow
https://github.com/rhuss/docker-maven-plugin

docker rmi -f 7d9495d03763





MAVEN SETTINGS 
<server>
		<id>docker-hub</id>
		<username>foo</username>
		<password>secret-password</password>
		<configuration>
		<email>foo@foo.bar</email>
		</configuration>
	</server>


C:\development\dockerpublishHub\complete>

mvn docker:push





https://github.com/spotify/docker-maven-plugin
http://blog-judcon.rhcloud.com/?p=57




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.springframework</groupId>
    <artifactId>gs-spring-boot-docker</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>
    <name>Spring Boot Docker</name>
    <description>Getting started with Spring Boot and Docker</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.1.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
    	<docker.image.prefix>luigibennardis</docker.image.prefix>
        <java.version>1.8</java.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
    
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.2.3</version>
				<configuration>
					<imageName>luigibennardis/micros:1.0</imageName>
					<serverId>docker-hub</serverId>
					 <registryUrl>https://index.docker.io/v1/</registryUrl> 
					 
				</configuration>
			</plugin>
		</plugins>
		

    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
		
    </dependencies>

	
	

</project>





tips for Using Jenkins on OpenShift
http://blog-judcon.rhcloud.com/?p=57






https://jenkins-cienv.rhcloud.com/job/jenkins-build/configure

https://itaffinity.wordpress.com/2015/09/09/using-custom-maven-jdk-version-when-building-with-jenkins-on-openshift/


<localRepository>/var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/.m2</localRepository>


FROM java:8
VOLUME /tmp
ADD /gs-spring-boot-docker-0.1.0.jar app.jar
ADD /gs-spring-boot-docker-0.1.0.jar app2.jar
ADD /gs-spring-boot-docker-0.1.0.jar app3.jar

ADD /run.sh run.sh

RUN java -jar /app.jar && java -jar /app2.jar && java -jar /app3.jar


ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]

CMD/COMMAND run.sh



run.sh:
#!/bin/sh
java -jar /app.jar &
java -jar /app2.jar &
java -jar /app3.jar &







/////////////////////////////////////////////
CREAZIONE DOCKERFILE E PUBBLICAZIONE EAR SU GIT 
////////////////////////////////////////////

C:\development\gs-spring-boot-docker-master\initialGitHubRepo>   mvn clean deploy 


http://stackoverflow.com/questions/15157779/maven-replacer-plugin-and-multiple-files









docker ps -a
docker rm 2eretey62

//AVVIO MY SQL ESPONENDO LA PORTA 3306 ALL'ESTERNO

C:\Users\3volv-04>

docker run -p 3306:3306 --name localmysql -e MYSQL_ROOT_PASSWO
RD=my-secret-pw -d mysql:5.6



docker@localDockerMachine:/c/Users/3volv-04$ 


docker run -ti -v /c/Users/condivisaVsContainer:/condivisaVsContainer mysql:5.6 /bin/bash

//NON FUNZIONA?
docker commit -m "added database create" -a "luigi bennardis" 8cdfb826e649  mysql/integra:1.1 

docker run -p 3306:3306 --name localmysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql/integra:1.1

docker run -p 3306:3306  -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql/integra:1.1



//ok user:admin 
docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw tutum/mysql


docker run -d -p 3306:3306 -v /c/Users/condivisaVsContainer:/tmp -e MYSQL_PASS=my-secret-pw -e STARTUP_SQL=/tmp/database.sql tutum/mysql

docker run -p 3306:3306 -v /c/Users/condivisaVsContainer:/tmp -e MYSQL_PASS=my-secret-pw -e STARTUP_SQL=/tmp/database.sql tutum/mysql








-v /c/Users/condivisaVsContainer:/condivisaVsContainer


 docker run -t -i -v /c/Users/condivisaVsContainer:/mnt mysql/integra:1.1 /bin/bash
 
 docker commit -m "added database create" -a "luigi bennardis"  cb84f581f2be  mysql/integra:1.2 
 
 docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw -e STARTUP_SQL="/tmp/database.sql" mysql/integra:1.2 
 
 
docker run -t -i -v /c/Users/condivisaVsContainer:/mnt mysql/integra:1.1 /bin/bash
docker commit -m "added dtabase create" -a "Luigi Bennardis" 114908efd7cc mysql/integra:1.2 

docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw -e START_UP_SQL="/tmp/database.sql" mysql/integra:1.2 /run.sh



docker run -t -i mysql/integra:1.2 /bin/bash 
docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw mysql/integra:1.2 /run.sh




docker run -t -i -p 3306:3306 -e MYSQL_PASS=my-secret-pw mysql/integra:1.2 /run.sh
docker commit -m "added table create" -a "Luigi Bennardis" e82af24221bf mysql/integra:1.3
docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw mysql/integra:1.3 /run.sh



















nok -docker run -d -p 3306:3306 -v /c/Users/condivisaVsContainer:/tmp -e MYSQL_PASS=my-secret-pw -e STARTUP_SQL="/tmp/database.sql" tutum/mysql

nok - docker run -d -p 3306:3306 -v /c/Users/condivisaVsContainer:/tmp -e MYSQL_PASS=my-secret-pw  tutum/mysql
OK - docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw tutum/mysql
ok - docker run -d -p 3306:3306 -e MYSQL_PASS=my-secret-pw -e ON_CREATE_DB=dbprova tutum/mysql

pk - docker run -d -p 3306:3306 -v /c/Users/condivisaVsContainer:/appoSql -e MYSQL_PASS=my-secret-pw -e ON_CREATE_DB=dbprova tutum/mysql
ok - docker run -d -p 3306:3306 -v /c/Users/condivisaVsContainer:/appoSql -e MYSQL_PASS=my-secret-pw -e ON_CREATE_DB=dbprova -e STARTUP_SQL="/appoSql/database.sql" tutum/mysql


sulla macchina locale ci sono al path c:\Users\condivisaVsContainer il file database.sql con gli script di creazione




non fungono
docker run -d -v /c/Users/condivisaDatiVsContainer:/var/lib/mysql tutum/mysql /bin/bash -c "/usr/bin/mysql_install_db"
docker run -d -p 3306:3306 -v /c/Users/condivisaDatiVsContainer:/var/lib/mysql tutum/mysql
docker run --name mysqldb -d -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql tutum/mysql /bin/bash
docker run --name mysqldb -d -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql mysql:5.6 /bin/bash
docker run --name mysqldb -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql -it -p 3306:3306 mysql:5.6 /bin/bash





docker run --name mysqldb -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 mysql:5.6

docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 mysql:5.6


docker run --name mysqldb -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 luigibennardis/dockerautomationtest:master

luigibennardis/dockerautomationtest:master





docker run --name mysqldb -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql -d luigibennardis/mysqltest
docker run --name mysqldb -d luigibennardis/mysqltest
 
 docker run --name mysqldb  -it -p 3306:3306 mysql:5.6 /bin/bash
 
 docker run --name mysqldb -it  luigibennardis/mysqltest  /bin/bash
 
 
 docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 mysql:5.6
 
 
 docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 mysql:5.6
 
 docker run --name mysqldb -v /c/Users/condivisaDatiVsContainer/var/sql_data:/var/lib/mysql -it luigibennardis/mysqltest

 
 
 
 
 
docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 luigibennardis/mysqltest

docker run --name mysqldb -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_DATABASE=pong_matcher_spring_development -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 luigibennardis/mysqltest









***************************
OK
***************************


LOGS BUILD DOCKER  docker@localDockerMachine:/var/log$
 
 BUILD C:\development\microservicesDockerDemoMysql\complete> mvn package docker:build
 
 
 docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=sample -e MYSQL_ROOT_PASSWORD=supersecret -it -p 3306:3306 luigibennardis/mysqltest
 
 
 
 
 
 
 
 
 
 
 curl -v -H "Content-Type: application/json" -X PUT http://localhost:8080/match_requests/firstrequest -d "{\"player\": \"andrew\"}" --noproxy localhost
curl -v -H "Content-Type: application/json" -X PUT http://localhost:8080/match_requests/firstrequest -d "{\"player\": \"navratilova\"}" --noproxy localhos







 
 docker exec -it fcec95ebce10 bash
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 



/////////////////////////////////////////////
CREAZIONE DOCKERFILE E PUBBLICAZIONE EAR SU GIT 
////////////////////////////////////////////

C:\development\gs-spring-boot-docker-master\initialGitHubRepo>   mvn clean deploy 



C:\development\workspace\01_spring-boot-rest-backing-services


01_spring_boot_rest_backing_services/01_spring_boot_rest_backing_services/1.2.1.RELEASE/01_spring_boot_rest_backing_services-1.2.1.RELEASE.jar


01_spring_boot_rest_backing_services/01_spring_boot_rest_backing_services/1.2.1.RELEASE/01_spring_boot_rest_backing_services-1.2.1.RELEASE.jar

































016 02 23

docker rm --force $(docker ps -qa)
docker ps -a
docker rm 
docker images 


OK 
docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=pong_matcher_spring_development -e MYSQL_ROOT_PASSWORD=root -it -p 3306:3306 mysql:5.6



docker run -p 8080:8080 -t springio/pong-matcher-spring

http://192.168.99.100:8080/





docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=pong_matcher_spring_development -e MYSQL_ROOT_PASSWORD=root -d mysql:5.6

docker run --name appdemo --link mysqldb:mysql -p 8080:8080 -d springio/pong-matcher-spring

docker run --name appdemo --link mysqldb:mysql -p 8080:8080 -t springio/pong-matcher-spring













mysql
docker run --name mysqldb -e MYSQL_USER=admin -e MYSQL_PASSWORD=mysql -e MYSQL_DATABASE=pong_matcher_spring_development -e MYSQL_ROOT_PASSWORD=root -d mysql:5.6

docker run --name appdemo --link mysqldb:mysql -p 8080:8080 -t springio/pong-matcher-spring
docker run --name appdemo --link mysqldb:mysql -p 8080:8080 -d springio/pong-matcher-spring


 41.93486	12.55199



lat DECIMAL(10, 8) NOT NULL, lng DECIMAL(11, 8) NOT NU

DROP TABLE indirizzi
CREATE TABLE `indirizzi` (
  `nome` VARCHAR(45) NOT NULL,
  `indirizzo` VARCHAR(255) NULL,
  `citta` VARCHAR(45) NULL,
  `latitudine` DECIMAL(10,8) NOT NULL,
  `longitudine` DECIMAL(10,8) NOT NULL,
  PRIMARY KEY (`nome`));
  
INSERT INTO indirizzi VALUES('Libia','Viale Libia 200','ROMA',41.93236,12.52021);
INSERT INTO indirizzi VALUES('Nomentana','Via Nomentana 41','ROMA',41.91054,12.50272);
INSERT INTO indirizzi VALUES('Villini','Via dei Villini 1','ROMA',41.79311,13.21948);
INSERT INTO indirizzi VALUES('Bologna','Piazza Bologna 5','ROMA',41.44434,12.52179);
INSERT INTO indirizzi VALUES('Fiori','Via Adriano Fiori 16','ROMA',41.93486,12.55199);
INSERT INTO indirizzi VALUES('Romania','Piazza Romania 1','ROMA',41.92475,12.49285);
INSERT INTO indirizzi VALUES('Muse','Piazza delle Muse 2','ROMA',41.93032,12.49025);
INSERT INTO indirizzi VALUES('Parioli','Viale Parioli 140','ROMA',41.92806,12.48661);
INSERT INTO indirizzi VALUES('Corso Italia','Corso Italia 100','ROMA',41.91018,12.50010);
INSERT INTO indirizzi VALUES('Prati Fiscali','Via dei Prati Fiscali 150','ROMA',41.94657,12.52057);
INSERT INTO indirizzi VALUES('Vimercati','Piazza Vimercati 1','ROMA',41.95777,12.52421); 



FUNZIONA
use test;

set @orig_lat=41.93236; set @orig_lon=12.52021;set @dist=10;
SELECT nome,
3956 * 2 * (ASIN(
SQRT(
POWER(
SIN(
(@orig_lat - abs(dest.latitudine)) * pi()/180/2),2) 
+ 
COS(
@orig_lat * pi()/180 )* 
COS(abs(dest.latitudine) *  pi()/180) 
*
POWER (SIN((@orig_lon - dest.longitudine)) *  pi()/180/2,2)
)
)
)
as distance FROM indirizzi dest having distance < @dist ORDER BY distance limit 10;

use test;

set @orig_lat=41.83236; set @orig_lon=12.62021;set @dist=9;
SELECT nome,
3956 * 2 * (ASIN(
SQRT(
POWER(
SIN(
(@orig_lat - abs(dest.latitudine)) * pi()/180/2),2) 
+ 
COS(
@orig_lat * pi()/180 )* 
COS(abs(dest.latitudine) *  pi()/180) 
*
POWER (SIN((@orig_lon - dest.longitudine)) *  pi()/180/2,2)
)
)
)
as distance FROM indirizzi dest having distance < @dist ORDER BY distance limit 10;


		
		
		
SELECT indirizzi.nome,indirizzi.indirizzo,indirizzi.citta,indirizzi.latitudine, 
		indirizzi.longitudine,3956 * 2 * 
		(ASIN(SQRT(POWER(SIN(?1 - abs(latitudine)) 
		* pi()/180/2),2) + COS(?1 * pi()/180 )*COS(abs(latitudine) *  pi()/180) 
		*POWER (SIN((?2 - longitudine)) *  pi()/180/2,2)))) "
		as distance FROM indirizzi having distance < ?3 ORDER BY distance limit 10" )
		




http://fr.scribd.com/doc/2569355/Geo-Distance-Search-with-MySQL



"SELECT indirizzi.nome,indirizzi.indirizzo,indirizzi.citta,indirizzi.latitudine, "
		+ "indirizzi.longitudine,3956 * 2 * "
		+ "(ASIN(SQRT(POWER(SIN((?1 - abs(latitudine)) "
		+ "* pi()/180/2),2) + COS(?1 * pi()/180 )*COS(abs(latitudine) *  pi()/180) "
		+ "*POWER (SIN((?2 - longitudine)) *  pi()/180/2,2)))) "
		+ "as distance FROM indirizzi having distance < ?3 ORDER BY distance limit 10;" )





 