<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


	<groupId>01_spring_boot_rest_backing_services</groupId>
    <artifactId>01_spring_boot_rest_backing_services</artifactId>
   	<packaging>jar</packaging>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.2.1.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <start-class>it.luigibennardis.rest.backingservices.DemoApplication</start-class>
        <java.version>1.8</java.version>
        <github.global.server>github</github.global.server>
    </properties>

 <distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			 
			<url>file:///var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/mvn-repo</url>
			
			<!-- 
			IN LOCALE {project.basedir}
			<url>file://${project.build.directory}/mvn-repo</url> 
			-->
			
		</repository>
	</distributionManagement>
	
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
          
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901-1.jdbc4</version>
        </dependency>
        
        
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
        
          
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
		 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
		 
    </dependencies>

<build>
        <finalName>${project.artifactId}</finalName>
<!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
			<plugins>
			
			
				<plugin>
					<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<phase>process-sources</phase>
								<goals>
									<goal>replace</goal>
								</goals>
							
							 
								<configuration>
								<!-- /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/wkspacejenkins/ -->
									<file>src/main/docker/dockerfileTemplate</file>
									<!-- wkspace /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/wkspacejenkins 
									build -> /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/mvn-repo
									-->
									<outputFile>${PATH_TO_REPO}/Dockerfile</outputFile>
									<replacements>
											<replacement>
												<token>@jar_name@</token>
												<value>01_spring_boot_rest_backing_services</value>
											</replacement>
											
											<replacement>
												<token>@version@</token>
												<value>${project.version}</value>
											</replacement>
		
										</replacements>                        
								</configuration>
							</execution>
	  					</executions>
				</plugin>
						
				
						
				<plugin>
				
					<groupId>com.github.github</groupId>
					<artifactId>site-maven-plugin</artifactId>
					<version>0.12</version>
					
					<configuration> 
						<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
						<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
						<outputDirectory>${PATH_TO_REPO}</outputDirectory> <!-- matches distribution management repository url above -->
						<!-- 
						
						PATH_TO_REPO /var/lib/openshift/566ae57d0c1e6629760000cd/app-root/data/buildjenkins/mvn-repo
						
						IN LOCALE
						<outputDirectory>
						${project.build.directory}/mvn-repo
						</outputDirectory>  
						-->
						<!-- matches distribution management repository url above -->
						
						<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
						<includes><include>**/*</include></includes>
						<merge>true</merge>                                        <!-- don't delete old artifacts -->
						<repositoryName>dockerAutomationTest</repositoryName>      <!-- github repo name -->
						<repositoryOwner>lbennardis</repositoryOwner>              <!-- github username  -->
					</configuration>
									
					<executions>
						<execution>
							<goals>
							  <goal>site</goal>
							</goals>
							<phase>deploy</phase>
						</execution>
					</executions>
									
				</plugin>
							
			
				
			</plugins>
            
         </build> 
	
</project>
